// Generated by CoffeeScript 1.12.7
(function() {
  var Another, Person, a, action, array, author, b, book, bool, copy, double, element, event, fn, func, greet, greeting, heredoc_string, i, index, is_ready, j, k, l, len, len1, len2, len3, make, message, model, n, name, no_arg, normalize, number, o, object, on_line, outer, p, page, prime_numbers, property, q, r, range, ref, ref1, ref2, ref3, ref4, ref5, results, results1, s, some_fn, string, t, type, undef, user, value, visa,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    slice = [].slice,
    hasProp = {}.hasOwnProperty,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  console.log('hello, coffee');


  /*
   long comment
   */

  a = 10;

  b = 20;

  bool = true;

  number = 2912;

  double = 42.23;

  bool = true;

  bool = false;

  bool = true;

  bool = false;

  on_line = false;

  is_ready = true;

  string = 'some string';

  string = 'some very long string';

  heredoc_string = "\nlorem ipsum dolor sit amet,\nconsectetur adipsicinp elit,\nmagnam, debitis, veritatis,\nvero, maxine numquem ipsan nostrum";

  heredoc_string = 'my text:';

  name = 'name';

  greeting = "hello, " + (name.toLowerCase());

  array = [1, 2, 3, 4, 5, 6, 7, 8, 9];

  array = [1, 2, 3, 4, 5, 6, 7, 8, 9];

  array = [1, 0];

  range = (function() {
    results = [];
    for (j = 0; j <= 25; j++){ results.push(j); }
    return results;
  }).apply(this);

  range.slice(0, 11);

  range.slice(0);

  range.slice(0, 9);

  copy = range.slice(0);

  user = {
    name: 'name',
    age: 32,
    status: 'developer',
    skills: {
      js: {
        coffee: 0,
        ts: 0
      }
    }
  };

  visa = /^4[0-9]{12}/;

  first && second;

  true || false;

  first && second;

  true || false;

  !is_ready || !on_line;

  a === b;

  a !== b;

  a === b;

  a !== b;

  a === !b;

  if ((((10 < z && z < m) && m < i) && i < 20)) {
    update(a);
  }

  ref = [b, a], a = ref[0], b = ref[1];

  ref1 = ["test", "auth", 42], book = ref1[0], author = ref1[1], page = ref1[2];

  ref2 = {
    make: 'porsche',
    model: '911 turbo',
    engine: {
      type: 'v8'
    }
  }, model = ref2.model, make = ref2.make, (ref3 = ref2.engine, type = ref3.type);

  user = {
    name: 'name',
    age: 90,
    last_visit: Date.now()
  };

  'age' in user;

  range = (function() {
    results1 = [];
    for (k = 21; k <= 42; k++){ results1.push(k); }
    return results1;
  }).apply(this);

  indexOf.call(range, 32) >= 0;

  country === 'ukraine' || country === 'uk';

  book = 3421;

  if (book != null) {
    if (typeof open === "function") {
      open(book);
    }
  }

  if (book !== null) {
    open(book);
  }

  if (book === !null) {
    open(book);
  }

  object = {};

  if (object.speed == null) {
    object.speed = 100;
  }

  this.age = config.age || 10;

  this.age = (ref4 = config.age()) != null ? ref4 : 10;

  object = {};

  if (object.speed == null) {
    object.speed = 100;
  }

  object.speed = object.speed || 100;

  object.speed || (object.speed = 100);

  object.speed || (object.speed = 100);

  object.speed && (object.speed = 20);


  /*
  var greet;
  greet = function(name) {
    return "hello, " + name;
  }
  function greet() {
  }
   */

  greet = function(name) {
    return 'hello, ' + name;
  };

  no_arg = function() {
    return 'no arg';
  };

  some_fn = function(name) {
    return here(args)();
    if (name) {
      return name;
    } else {
      return 'name';
    }
  };

  undef = function(name, greeting) {
    if (name == null) {
      name = 'undefined';
    }
    if (greeting == null) {
      greeting = 'bonjour';
    }
    'undefined returned';
  };

  normalize = function() {
    var length, vectors;
    length = arguments[0], vectors = 2 <= arguments.length ? slice.call(arguments, 1) : [];
  };

  outer = 10;

  func = function() {
    var inner;
    outer = 20;
    inner = 10;
  };

  update(object(smth, 10, 20), 'false');

  show();

  show();

  update()()();

  a + b;

  a(+b);

  (function() {
    return something();
  });

  (function(name) {
    return something(name);
  })(name);

  if (ready) {
    activate(something);
    if (!is_full) {
      append(something);
      if (ready !== 0) {
        some_fn();
        so(like(that))();
      }
    }
    if (!is_liked) {
      so(like === !ten)();
    } else {
      insert(some_fn(name));
      prepate(some_fn)();
    }
  }

  if (is_full) {
    activate(something);
  }

  if (is_full) {
    activate(something);
  }

  if (!is_liked) {
    so(something(wrong))();
  }

  if (!is_liked) {
    so(something(wrong))();
  }

  if (!is_ready) {
    prepare();
  }

  action = mode === 'ready for test' ? 'sleep' : 'done';

  show(message ? message : warning);

  switch (state) {
    case 0:
      message = 'request is not initialized';
      break;
    case 1:
      message = 'server connection established';
      break;
    case 2:
      message = 'request received';
      break;
    case 3:
      message = 'processing request';
      break;
    case 4:
      message = 'request finished and response is ready';
      break;
    default:
      message = 'unknown state';
  }

  message = (function() {
    switch (state) {
      case 0:
        return 'request is not initialized';
      case 1:
        return 'server connection established';
      case 2:
        return 'request received';
      case 3:
        return 'processing request';
      case 4:
        return 'request finished and response is ready';
      default:
        return message = 'unknown state';
    }
  })();

  console.log("message -> [" + state + "] " + ((function() {
    switch (state) {
      case 0:
        return 'request is not initialized';
      case 1:
        return 'server connection established';
      case 2:
        return 'request received';
      case 3:
        return 'processing request';
      case 4:
        return 'request finished and response is ready';
      default:
        return message = 'unknown state';
    }
  })()));

  while (is_ready) {
    so(done);
  }

  while (is_ready) {
    something();
  }

  while (!is_ready) {
    prepare();
  }

  while (!is_ready) {
    prepare();
  }

  while (!is_ready) {
    prepare();
  }

  for (i = l = 0; l <= 10; i = ++l) {
    update(i);
  }

  for (i = n = 0; n < 10; i = ++n) {
    update(i);
  }

  for (i = o = 0; o < 10; i = o += 4) {
    update(i);
  }

  for (i = p = 0; p < 100; i = p += 2) {
    if (isPrime(i)) {
      console.log(i);
    }
  }

  prime_numbers = (function() {
    var q, results2;
    results2 = [];
    for (i = q = 0; q <= 10; i = ++q) {
      if (isPrime) {
        results2.push(i);
      }
    }
    return results2;
  })();

  for (q = 0, len = array.length; q < len; q++) {
    element = array[q];
    if (indexOf.call(right_elements, element) >= 0) {
      show(element);
    }
  }

  for (index = r = 0, len1 = array.length; r < len1; index = ++r) {
    element = array[index];
    if (indexOf.call(right_elements, element) >= 0) {
      show(index);
    }
  }

  for (index = s = 0, len2 = array.length; s < len2; index = ++s) {
    element = array[index];
    if (indexOf.call(left_elements, element) >= 0) {
      remove_index;
    }
  }

  for (property in object) {
    console.log(property);
  }

  for (property in object) {
    console.log(object[property]);
  }

  for (property in object) {
    if (!hasProp.call(object, property)) continue;
    value = object[property];
    console.log(value);
  }

  ref5 = ['click', 'mouseover', 'mouseout', 'focus'];
  fn = function(event) {
    my_super_library.prototype["on" + event] = function(callback) {
      my_super_library.prototype.on(event, callback);
    };
  };
  for (t = 0, len3 = ref5.length; t < len3; t++) {
    event = ref5[t];
    fn(event);
  }


  /*
  Person = (function() {
    function Person(name, age) {
      this.name = name
      this.age = age
    }
    Person.prototype.get_info = function() {
      return 'name ' + this.name + ', age ' + this.age
    }
    Person.my_static_function = function() {
      return something()
    }
    Person.my_static_number = 9317
    return Person
  })
   */

  Person = (function() {
    function Person(name1, age) {
      this.name = name1;
      this.age = age;
    }

    Person.prototype.get_info = function() {
      return "name " + this.name + ", age " + this.age;
    };

    Person.my_static_function = function() {
      return something();
    };

    Person.my_static_number = 9317;

    return Person;

  })();

  Another = (function(superClass) {
    extend(Another, superClass);

    function Another() {
      Another.__super__.constructor.call(this, 10, 20, 30);
      something();
    }

    Another.prototype.get_info = function() {
      Another.__super__.get_info.call(this, arg1, arg2);
      return call(this(method));
    };

    Another.prototype.my_method = function() {
      var _this;
      _this = this;
      return some_function(function() {
        return process_data(_this.age);
      });
    };

    Another.prototype.normal = function() {
      return call_this((function(_this) {
        return function() {
          return process_data(_this.age);
        };
      })(this));
    };

    return Another;

  })(Person);

  Person.prototype.my_method = function() {
    return say('hello, ');
  };


  /*
  var that = this
  var self = this
  var _this = this
   */

}).call(this);
