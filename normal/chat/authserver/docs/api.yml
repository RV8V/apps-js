swagger: "2.0"
info:
  description: "."
  version: "1.0.0" 
  title: ""
host: "server.local"
basePath: "/v2"
schemes:
- "http"
paths:
  /register:
     post:
      summary: "registrate new user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/RegisterForm"
      responses:
        409:
          description: "Invalid input - email or username exists"
        200:
          description: "user is registrated"
  /login:
     post:
      summary: "user autherization"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AuthForm"
      responses:
        401:
          description: "Auth failed"
        200:
          description: "Auth successfull"

  /token:
     post:
      summary: "get new access token using refresh token"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/TokenForm"
      responses:
        401:
          description: "Refresh token is not correct"
        403:
          description: "Refresh token is no longer valid"
        200:
          description: "Auth successfull"
  /logout:
    delete:
      summary: "Delete refresh token so that user can not get access token and enter later"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "path"
        description: "The refresh that needs to be deleted"
        required: true
        type: "string"
      responses:
        "204":
          description: "Successfully deleted"
        "403":
          description: "Forbidden"
definitions:
  RegisterForm:
    type: "object"
    properties:
      email:
        type: "string"
        example: "test@gmail.com"
      name:
        type: "string"
        example: "John"
      password:
        type: "string"
        example: "password"
  AuthForm:
    type: "object"
    properties:
      name:
        type: "string"
        example: "John"
      password:
        type: "string"
        example: "password"
  TokenForm:
    type: "object"
    properties:
      token:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRvZEBnbWFpbC5jb20iLCJ1c2VySWQiOiI1ZWI5ZjAwMzRjMzM1ZTQ0N2QxNzFjY2EiLCJpYXQiOjE1ODkyNDQ1MjJ9.zwtglkrUXxosmA1K9ytZwuHOvt5YFzba7U8tkffYuaA"
